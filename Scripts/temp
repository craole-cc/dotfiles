#!/usr/bin/env rust-script
//! ```cargo
//! [dependencies]
//! regex = "1.8.4"
//! ```

// https://regex101.com/r/BeVEvO/1
use regex::Regex;

fn main() {
    let urls = [
        "http://github.com/user/repo.git",              // VALID: HTTP-based
        "https://github.com/user/subdomain/repo.git",   // VALID: HTTPS-based
        "https://github.com/user/repo.git",             // VALID: HTTPS-based
        "https://github.com/user/repo",                 // VALID: HTTPS-based Git URL sans extension
        "https://github.com/user/repo.git#branch-name", // VALID: HTTPS-based with a fragment/anchor
        "https://user:token@github.com/user/repo.git", // VALID: HTTPS-based with a username and token
        "ssh://git@bitbucket.org:user/repo.git",       // VALID: SSH-based
        "git@github.com:user/repo.git",                // VALID: SSH-based
        "git@github.com:craole-cc/dotfiles.git",       // VALID: SSH-based
        "git://github.com:1234/user/sub2/repo.git",    // VALID: SSH-based with a specific port
        "git:///github.com/user/repo.git/subfolder",   // VALID: SSH-based with a specific path
        "file:///absolute/path/to/my-project.git",     // VALID: Local file-based
        "https://github.com",                          // INVALID: Missing user and project
        "https://github.com/craole",                   // INVALID: Missing project
        "https://github.com/user/repo.git?param1=value1&param2=value2", // INVALID: Bad characters [=,?,&]
    ];

    let patterns = [
        // (
        //     r"https?://[A-Za-z0-9_:@.-]*(:|/)[A-Za-z0-9_.-]*/[A-Za-z0-9_.#-]*$",
        //     "VALID HTTP",
        // ),
        // r"https?|file|ssh|git)+(@|:///?)+[a-z0-9]*",
        // (
        //   r"(?:git|ssh|https?|git@[-\w.]+):(\/\/)?(.*?)(\.git)(\/?|\#[-\d\w._]+?)$",
        //   "VALID HTTP",
        // ),
        // "https?://[A-Za-z0-9_.-]*(:|/)[A-Za-z0-9_.-]*/"
        // (r"^[^/]*$", "INVALID: Missing user subdomain"),
        // (r"^[^/]+/[^/]*$", "INVALID: Missing repository name"),
        // (r"[?&=,]", "INVALID: Invalid characters"),
        // (r"^(http|https)://[^?&=]+$", "VALID: HTTP-based"),
        // (r"^https?://.*", "VALID: HTTPS-based"),
        // (r"^(?:ssh|git).*", "VALID: SSH-based"),
        // (r"^file://.*", "VALID: Local file-based"),
        // (r"[^/]+/[^/]+$", "INVALID: Missing user subdomain"),
        // (r"[^/]+/[^/]+/[^/]+$", "INVALID: Missing repository name"),
        (r".*[?&=,].*", "INVALID: Invalid characters"),
    ];

    for url in &urls {
        let mut result = "INVALID";

        for (pattern, message) in &patterns {
            if Regex::new(pattern).unwrap().is_match(url) {
                result = message;
                break;
            }
        }

        println!("{}: {}", result, url);
    }
}