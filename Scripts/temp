#!/bin/sh

# Regular expressions
username_regex='^[a-zA-Z0-9._%+-]+$'
domain_name_regex='^[a-zA-Z0-9.-]+$'
tld_regex='^[a-zA-Z]+$'

# Check if the username is valid
check_username() {
  username=$1

  # Check if the username is empty or contains invalid characters
  if [ -z "$username" ] ||
    ! printf "%s" "$username" | grep -Eq "$username_regex"; then
    return 1
  fi

  return 0
}

# Check if the @ sign is present
check_at_sign() {
  email=$1

  # Check if the email contains @ sign
  if ! printf "%s" "$email" | grep -q '@'; then
    return 1
  fi

  return 0
}

# Check if the domain is valid
check_domain() {
  domain=$1

  # Check if the domain has a valid name
  domain_name "$domain" || return 1

  # Check if the domain has a valid top-level domain
  domain_tld "$domain" || return 1

  # Check if the domain has a valid dot
  domain_dot "$domain" || return 1

  return 0
}

# Check if the domain name is valid
domain_name() {
  domain=$1

  # Check if the domain name is empty or contains invalid characters
  if [ -z "$domain" ] || ! printf "%s" "$domain" | grep -Eq "$domain_name_regex"; then
    return 1
  fi

  return 0
}

# Check if the top-level domain is valid
domain_tld() {
  domain=$1

  # Extract the top-level domain from the domain
  tld=$(printf "%s" "$domain" | awk -F. '{print $NF}')

  # Check if the top-level domain is empty or contains invalid characters
  if [ -z "$tld" ] || ! printf "%s" "$tld" | grep -Eq "$tld_regex"; then
    return 1
  fi

  return 0
}

# Check if the domain has a dot after the @ sign
domain_dot() {
  domain=$1

  # Extract the domain name from the email
  domain_name=$(printf "%s" "$domain" | awk -F@ '{print $2}')

  if ! printf "%s" "$domain_name" | grep -q '.'; then
    return 1
  fi


  # # Check if the domain name contains a dot
  # if [ "$(printf "%s" "$domain_name" | awk -F. '{print NF}')" -lt 2 ]; then
  #   return 1
  # fi

  return 0
}


# Main script
validate_email() {
  email=$1

  # Split the email into username and domain
  username=$(printf "%s" "$email" | awk -F@ '{print $1}')
  domain=$(printf "%s" "$email" | awk -F@ '{print $2}')

  # Check if the username is valid
  check_username "$username" || {
    printf "Invalid username\n"
    return 1
  }

  # Check if the @ sign is present
  check_at_sign "$email" || {
    printf "Invalid email format\n"
    return 1
  }

  # Check if the domain is valid
  check_domain "$domain" || {
    printf "Invalid domain\n"
    return 1
  }

  printf "Email is valid\n"
}

# Usage example
validate_email "john.doe@example.com"
