#!/bin/sh

main() {
	show_path=0
	for arg in "$@"; do
		case $arg in
			-p | --path)
				show_path=1
				shift
				;;
			*)
				shift
				;;
		esac
	done

	establish_environment "$@"
	perpend_dirs_to_PATH "$dirs"
	make_scripts_executable "$dirs"

	if [ "$show_path" -eq 1 ]; then
		printf "%s" "$path"
	fi
}

establish_environment() {
	if [ "$#" -eq 0 ]; then
		parent_dir="$PWD"
		dirs="$(get_possible_dirs "$parent_dir")"
	else
		dirs="$(get_dirs "$@")"
	fi
}

get_dirs() {
	find "$@" -type d
}

get_possible_dirs() {
	parent_dir="$1"
	possible_dirs="Bin bin Scripts scripts Function functions"
	for path in $possible_dirs; do
		path="$parent_dir/$path"
		[ -d "$path" ] && get_dirs "$path"
	done
}

perpend_dirs_to_PATH() {
	paths="$1"
	for path in $paths; do
		PATH="$path${PATH:+:$PATH}"
		# PATH="${PATH:+:$PATH}$path"
		# PATH="$path:$PATH"
	done
	export PATH
}

make_scripts_executable() {
	paths="$1"
	non_exe_files="$(find "$paths" -type f ! -executable)"
	[ "$non_exe_files" ] || return 0
	printf "%s:\n\n%s\n\n%s " \
		"Non-executable file[s]" \
		"$(printf "%s\n" "$non_exe_files" | sed 's/^/\t/')" \
		"Would you like to make them executable [y/N]: "
	read -r response
	case $response in
		[yY]*)
			find "$paths" -type f -exec chmod +x --changes {} \;
			;;
		*) printf "The files were left untouched" ;;
	esac
}
main "$@"
