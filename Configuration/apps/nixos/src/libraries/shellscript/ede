#!/bin/sh
# debug=true

main() {
	parse_arguments "$@"
	define_tools
	execute_process
}

parse_arguments() {
	#> Reset arguments
	unset tui gui arg tool debug tool

	while [ "$#" -gt 0 ]; do
		case "$1" in
		-t | --tui | --tty)
			wehave "$2" && tui="$2"
			;;
		-g | --gui)
			wehave "$2" && gui="$2"
			;;
		-e | --tool)
			tool="$2"
			shift
			;;
		-d | --debug)
			debug=true
			;;
		*)
			if wehave "$1"; then
				[ "$gui" ] || [ "$tui" ] || tool="$1"
			else
				arg="$arg $1"
			fi
			;;
		esac
		shift
	done
}

wehave_display() {
	[ -n "$DISPLAY" ] || (
		wehave tasklist && tasklist | grep -q "explorer.exe"
	)
}

define_tools() {
	set_tool() {
		while [ "$#" -ge 1 ]; do
			if wehave "$1"; then
				printf "%s" "$1"
				return
			else
				shift
			fi
		done
	}

	tui="$(set_tool "$tui" "helix" "hx" "nvim" "vim" "nano" "$EDITOR")"
	gui="$(set_tool "$gui" "VScode" "code-insiders" "codium" "code" "$tui" "$VISUAL")"

	if wehave_display; then
		tool="${tool:-$gui}"
	else
		tool="${tool:-$tui}"
	fi

	[ "$tool" ] || printf "Error: Unable to determine a tool to use"
}

establish_environment() {
	parse_arguments "$@"
	define_tools
}

trim() {
	[ "$1" ] || {
		printf "Trim Error: No input provided"
		return 1
	}

	# trimmed="$(printf '%s' \"$1\" | awk '{$1=$1};1')"
	trimmed="${1#"${1%%[![:space:]]*}"}"
	trimmed="${trimmed%"${trimmed##*[![:space:]]}"}"

	printf "%s" "$trimmed"
}

wehave() {
	type "$1" >/dev/null 2>&1
}

execute_process() {
	arg="$(trim "${arg:-$PWD}")"

	case "$debug" in
	true | 1)
		printf "TUI: %s\n" "$tui"
		printf "GUI: %s\n" "$gui"
		printf "ARG: %s\n" "$arg"
		printf "EDE: %s\n" "$tool"
		printf "CMD: %s %s\n" "$tool" "$arg"
		;;
	*)
		printf "%s %s\n" "$tool" "$arg"
		[ "$tool" ] && eval "$tool" "$arg"
		;;
	esac

}

main "$@"
