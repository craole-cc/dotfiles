#!/bin/sh

# ===================================================================
#@		                           	INFO			                       @#
# ===================================================================

__info__() {
  _cmd_PATH="$(PathOf "$0")"
  _cmd_NAME="$(basename "$_cmd_PATH")"
  _cmd_DIR="$(dirname -- "$_cmd_PATH")"
  _cmd_VERSION="1.0"
  _cmd_DESCRIPTION="Desrription"
  _cmd_DEPENDENCIES="printf, echo, __cmd_exists__"
  _cmd_USAGEGUIDE="$(
    cat <<USAGE_GUIDE

#>----------------------------------------------------<#
                      USAGE: $_cmd_NAME
#>----------------------------------------------------<#
    $_cmd_DESCRIPTION
#>----------------------------------------------------<#
            command <[options]> <[arguments]>
          $_cmd_NAME --flagb "arg to process"
#>----------------------------------------------------<#
      -h --help       |>     Usage guide
      -v --version    |>     Version
      -d --verbose    |>     Details
      -f --flaga      |>     Flag A [default]
      -b --flagb      |>     Flag B
      -c --flagc      |>     Flag C
      -n --count      |>     Interator
#>----------------------------------------------------<#

USAGE_GUIDE
  )"
}

# ===================================================================
#@		                        GLOBAL TOOLS                         @#
# ===================================================================

#@ Usage display
__help__() {
  printf "%s\n" "$_cmd_USAGEGUIDE"
  exit 0
}

#@ Version display
__version__() {
  printf "%s\n" "$_cmd_VERSION"
  exit 0
}

#@ Command validation
__cmd_exists__() {
  unalias "$@" >/dev/null 2>&1
  command -v "$@" >/dev/null 2>&1
}

# ===================================================================
#@		                          OPTIONS			                       @#
# ===================================================================

if __cmd_exists__ getoptions; then

  #@ Declare user options (Allow multiple flags)
  parser_definition() {
    setup REST
    disp _cmd_USAGEGUIDE -h --help
    disp _cmd_VERSION -v --version
    flag VERBOSE -d --verbose -- "takes no arguments"
    flag FLAG -f --flag -- "takes no arguments"
    flag COUNT -n --count counter:true init:=0 -- "e.g. -nnn will be 3 COUNT"

  }

  #@ Load options
  eval "$(getoptions parser_definition) exit 1"

else

  #@ Declare user options (One flag per command)
  case "$1" in
  '-h' | '--help') __help__ ;;
  '-v' | '--version') __version__ ;;
  '-d' | '--verbose')
    VERBOSE=true
    shift
    ;;
  '-a' | '--flaga')
    FLAG_A=true
    shift
    ;;
  '-b' | '--flagb')
    FLAG_B=true
    shift
    ;;
  '-c' | '--flagc')
    FLAG_C=true
    shift
    ;;
  *) ;;
  esac
fi

# ===================================================================
#@		                          DEFAULT			                       @#
# ===================================================================

__defaults__() {

  #@ Set FLAG as the default
  OPTION="$FLAG_A"

  #@ Change calculator to python is requested
  [ "$FLAG_B" ] && OPTION="$FLAG_B"

  #@ Change calculator to bc is requested
  [ "$FLAG_C" ] && OPTION="$FLAG_C"

}

# ===================================================================
#@		                           	ERROR			                       @#
# ===================================================================

__error__() {
  case $* in
  -s | --arg)
    msg="ðŸŸ¥ Please ensure that a valid equation is entered."
    printf "\n%s\n" "$msg"
    __help__
    exit 1
    ;;
  *) ;;
  esac
}

# ===================================================================
#@		                          PROCESS			                       @#
# ===================================================================

__process__() {

  [ "$VERBOSE" ] && printf "%s\n" "$OPTION"
  # { ... }

}

# ===================================================================
#@		                           	 MAIN			                       @#
# ===================================================================

__main__() {

  #@ Confirm that a arg was entered
  [ "$#" -eq 0 ] && __error__ --arg

  #@ Process all stings
  while [ $# -gt 0 ]; do
    __process__ "$1"
    shift
  done

}

# ===================================================================
#@		                          CLEANUP			                       @#
# ===================================================================

__cleanup__() {
  unset VERBOSE BC FLAG CALCULATOR
}

# ===================================================================
#@		                            RUN	  		                       @#
# ===================================================================

#@ Load internal variables
__info__

#@ Establish defaults
__defaults__

#@ Allow verbose option if requested
# if [ "$VERBOSE" ]; then
#   __verbose__ "$@"
# else
#   __main__ "$@"
# fi

#@ Remove any leftover variables
# __cleanup__
