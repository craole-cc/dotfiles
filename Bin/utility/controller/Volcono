#!/bin/sh

# ===================================================================
#@		                           	INFO			                       @#
# ===================================================================

__info__() {
  _cmd_PATH="$(PathOf "$0")"
  _cmd_NAME="$(basename "$_cmd_PATH")"
  _cmd_HOME="$(dirname -- "$_cmd_PATH")"
  _cmd_VERSION="1.0"
  _cmd_DESCRIPTION="Adjust audio volume levels"
  _cmd_DEPENDENCIES="coreutils, pamixer"
  _cmd_USAGEGUIDE="$(
    cat <<USAGE_GUIDE

#>----------------------------------------------<#
                  USAGE: $_cmd_NAME
#>----------------------------------------------<#
            $_cmd_DESCRIPTION
#>----------------------------------------------<#
        command <[options]> <[arguments]>
            $_cmd_NAME --set "50"
#>----------------------------------------------<#
    -h --help       |>    Usage guide
    -v --version    |>    Version
    -d --verbose    |>    Details
    -q --quiet      |>    Supress information
    -t --dry-run    |>    Test
    -S --set        |>    Set to <level>
    -T --toggle     |>    Toggle ON|OFF
    -I --increase   |>    Increase by <amount>
    -D --decrease   |>    Decrease by <amount>
    -M --mute       |>    Enable sound
    -U --unmute     |>    Disable sound
    -s --status     |>    Diplay status
#>----------------------------------------------<#

USAGE_GUIDE
  )"
}

# ===================================================================
#@		                        GLOBAL TOOLS                         @#
# ===================================================================

#@ Usage display
__help__() {
  printf "%s\n" "$_cmd_USAGEGUIDE"
  exit 0
}

#@ Version display
__version__() {
  printf "%s\n" "$_cmd_VERSION"
  exit 0
}

#@ Command validation
__cmd_exists__() {
  unalias "$@" >/dev/null 2>&1
  command -v "$@" >/dev/null 2>&1
}

# ===================================================================
#@		                          OPTIONS			                       @#
# ===================================================================

__opts__() {
  while [ "$#" -gt 0 ]; do
    case $1 in
    --help | -h) __help__ ;;
    --verbose | -d) verbose=true ;;
    --quiet | -q) quiet=true ;;
    --test | --dry-run) dry_run=true ;;
    --set | -S) action="set" ;;
    --toggle* | -T) action="toggle" ;;
    --increase | --up | -I) action="increase" ;;
    --decrease | --down | -D) action="decrease" ;;
    --unmute | -U) action="unmute" ;;
    --mute | -M) action="mute" ;;
    --status | -s) action="get-status" ;;
    --level | -l | --step) level="$2" ;;
    *) level="$1" ;;
    esac
    shift
  done
}

# ===================================================================
#@		                          DEFAULT			                       @#
# ===================================================================

__defaults__() {

  #| Verbose
  [ "$quiet" ] || verbose=true

  #| Level/Step
  case $level in
  *[0-9]*)
    [ "$action" ] || {
      action="set"
      level=50
    }
    ;;
  *) level=10 ;;
  esac

  #| Action
  action="${action:-"toggle"}"

  #| Application
  if __cmd_exists__ pamixer; then
    __set__() { pamixer --set-volume "$level"; }
    __toggle__() { pamixer --toggle-mute; }
    __increase__() { pamixer --increase "$level"; }
    __decrease__() { pamixer --decrease "$level"; }
    __mute__() { pamixer --mute; }
    __unmute__() { pamixer --unmute; }
    __status__() { pamixer --get-volume-human; }
  else
    echo "no known audio control tool available"
    exit
  fi
}

# ===================================================================
#@		                          PROCESS			                       @#
# ===================================================================

__process__() {
  case "$action" in
  set) __unmute__ && __set__ ;;
  toggle) __toggle__ ;;
  increase) __unmute__ && __increase__ ;;
  decrease) __unmute__ && __decrease__ ;;
  unmute) __unmute__ ;;
  mute) __mute__ ;;
  status) __status__ ;;
  *) ;;
  esac
}

__display__() {
  case "$action" in
  *crease) printf "Volume %sd by %sdb to %s" "$action" "$level" "$(__status__)" ;;
  set) printf "Volume %s to %s\n" "$action" "$(__status__)" ;;
  *)
    case "$(__status__)" in
    *"%") printf "Audio level is at %s\n" "$(__status__)" ;;
    *) printf "Audio stream disabled\n" ;;
    esac
    ;;
  esac
}

# ===================================================================
#@		                           	 MAIN			                       @#
# ===================================================================

__test__() {
  echo "action: $action | level: $level"
}

__main__() {
  #| Initialize app
  __info__

  #| Accept user arguments
  __opts__ "$@"

  #| Load default options
  __defaults__

  #| Process
  if [ "$dry_run" ]; then
    __test__
  else
    __process__
  fi

  #| Display Info
  [ "$quiet" ] || __display__
}

__main__ "$@"
