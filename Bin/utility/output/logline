#!/bin/sh

# | Set default values for local variables
code=0
notify=""
info=""
label=""
last_line=
paragraph=""
delimiter=" |> "

if type notify-send >/dev/null 2>&1; then
  notifier="notify-send"
fi

# | Quit function early if no arguments provided, print a blank line like echo
[ $# -eq 0 ] && return 0

# | Tag the last line to prevent printing a blank line
case "$@" in *"-ll"* | *"-last"* | *"-fatal"*) last_line=true ;; esac

# | Parse options
while [ "$#" -ge 1 ]; do
  case "$1" in
  --info | --error | --warn*)
    special=true
    case "$1" in
    --info)
      [ "$verbose" ] && label="INFO: "
      code="${code:-0}"
      ;;
    --warn*)
      label="WARN: "
      code="${code:-1}"
      ;;
    --error)
      label="ERROR: "
      code="${code:-1}"
      ;;
    esac

    [ "$#" -eq 2 ] && info="${label}${2}"
    [ "$#" -gt 2 ] && {
      label="${label}${2}"
      info="${label}${delimiter}${3}"

      # | Generate padding to place before each info
      len_label="${#label}"
      len_delim="${#delimiter}"
      padding_length=$((len_label + len_delim))
      info_padding="$(printf "%-${padding_length}s")"

      # | Append additional info with leading padding and new line
      while [ "$#" -gt 3 ]; do
        case "$4" in -*) break ;; esac
        info="$(printf "%s\n%s%s" "$info" "$info_padding" "$4")"
        shift
      done
    }
    ;;
  --code)
    special=true
    case "$2" in '' | *[!0-9]*) code=1 ;; *) code="$2" ;; esac
    ;;
  --fatal)
    special=true
    fatal=true
    case "$2" in '' | *[!0-9]*) code=1 ;; *) code="$2" ;; esac
    ;;
  --note)
    special=true
    info="Note: "
    while [ "$#" -gt 1 ]; do
      case "$2" in -*) break ;; esac
      info="${info}${2}"
      shift
    done
    ;;
  --notify) notify=true ;;
  --delim*)
    delimiter="$(printf "%s" "$2")"
    ;;
  -l | --last | --line-last) ;;
  -n | --line | --line-new)
    [ "$2" ] && {
      info="$(printf "%s\n%s" "$info" "$2")"
      shift
    }
    ;;
  -p | --paragraph)
    [ "$2" ] && {
      info="$(printf "%s\n%s" "$info" "$2")"
      shift
    }
    paragraph=true
    ;;
  -s | --space)
    [ "$2" ] && {
      info="$(printf "%s %s" "$info" "$2")"
      shift
    }
    ;;
  -j | --join)
    [ "$2" ] && {
      info="$(printf "%s%s" "$info" "$2")"
      shift
    }
    ;;
  -*) ;;
  *)
    [ "$special" ] ||
      if [ "$info" ]; then
        info="${info} ${1}"
      else
        info="$1"
      fi
    ;;
  esac
  shift
done

#| TTY Output
printf "%s" "$info"
[ "$last_line" ] || printf "\n"
[ "$paragraph" ] && printf "\n"

#| GUI Output
[ "$notify" ] && [ "$notifier" ] && "$notifier" "$info"

#| Terminate
if [ "$fatal" ]; then exit "$code"; else return "$code"; fi
