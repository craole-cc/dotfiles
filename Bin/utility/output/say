#!/bin/sh

#/> Utilities                                       <\
send_stdout() {
  blank_line() { printf "\n"; }
  [ "$preline" ] && blank_line
  printf "%s" "$1"
  [ "$newline" ] && blank_line
}
send_notification() {
  [ "$newline" ] &&
    notify-send "$1"
}

parse_arguments() { #@ Initialize User Options via CLI

  #@ Ensure arguments are supplied
  [ "$#" -ge 1 ] || {
    failure=true
    end_process --error-exit "No arguments provided"
  }

  #@ Parse flags and arguments
  while [ $# -ge 1 ]; do
    case $1 in
    -h | --help) end_process "$scr_HELP" ;;
    -v | --version) end_process "$scr_VERSION" ;;
    -q | --quiet) verbosity="quiet" ;;
    -d=* | --verbose=*) verbosity="${1#*=}" ;;
    -d | --verbose)
      case "$2" in
      quiet | info | debug | 0 | 1 | 2) verbosity="$2" ;;
      *) verbosity="debug" ;;
      esac
      ;;
    -N | --notify) notify=true ;;
    -b=* | --break=*) line_break="${1#*=}" ;;
    -l | --line-break) line_break=1 ;;
    -n | --no-break) unset line_break ;;
    -*) end_process --error-exit "Unknown option:" "$1" ;;
    *)
      #@ Store arguments in an array
      message="$1"
      args="$(are --save "$args" "$message")"
      ;;
    esac
    shift
  done

  #@ Set verbosity level
  case "$verbosity" in
  0 | quiet) verbosity=0 ;;
  1 | error | debug) verbosity=1 ;;
  2 | info) verbosity=2 ;;
  *) verbosity=0 ;;
  esac

  #@ Set line break count
  [ "$line_break" ] && {
    #TODO add an error verbosity level to is_number to allow one run
    #TODO is_number --verbose "$line_break"
    is_number || {
      is_number --verbose "$line_break"
      exit 1
    }
  }

  #@ Extract other arguments
  args="$(are --expand "$args")"
  total_args="$(are --count "$args")"
  last_arg="$(are --last "$args")"
}

run_process() {
  set -- "$args"

  echo "$#"

  # send_stdout "$@"
  # echo "MESSAGE: $message"
  # echo "ARGS: $args"
  # echo " TOT: $total_args"
  # echo " TOT: $last_arg"
}
main() {
  parse_arguments "$@"
  run_process
}

main "$@"
