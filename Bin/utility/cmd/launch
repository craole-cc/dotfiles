#!/bin/sh

parse_arguments() {
  while [ "$#" -ge 1 ]; do
    case "$1" in
    -d | --verbose) VERBOSITY=1 ;;
    *) ;;
    esac
    shift
  done
}

execute() {
  if command -v tasklist >/dev/null 2>&1; then
    launch_on_windows "$@"
  elif command -v pgrep >/dev/null 2>&1; then
    launch_on_unix "$@"
  fi
}

launch_on_unix() {
  if
    #@ Check if the application is already running
    pgrep "$1" >/dev/null
  then
    #@ Activate the window (switch to its desktop and raise it)
    wmctrl -a "$@"
  else
    #@ Launch the application if it's not already running
    exec "$@" &
  fi
}

process_core() {
  if
    #@ Check if the application is already running
    pgrep "$1" >/dev/null
  then
    #@ Activate the window (switch to its desktop and raise it)
    wmctrl -a "$@"

    #@ Send verbose information
    present_info --active
  else
    #@ Launch the application if it's not already running
    exec "$@" &

    #@ Send verbose information
    present_info --launched
  fi
}

present_info() {
  case "$1" in
  --active)
    [ "$VERBOSITY" -gt 0 ] &&
      msg="$_APP is already running."
    ;;
  --launched)
    [ "$VERBOSITY" -gt 0 ] &&
      msg="$_APP has been started"
    ;;
  *) printf "%s\n" "${msg:-$*}" ;;
  esac
}

point_of_entry() {
  parse_arguments "$@"
  execute "$@"
  # exit 0
}

point_of_entry "$@"
