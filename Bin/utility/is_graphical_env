#!/bin/sh

#/> Script Info
scr_NAME=is_graphical_env
scr_DESCRIPTION="Validate graphical environment"
scr_VERSION=1.0

#/> Config
flag_VERBOSE=0
padding="  "

parse_cli() {
  #@ Parse command-line options
  case "$1" in
  -h | --help) post_info --help ;;
  -v | --version) post_info --version ;;
  -d | --verbose) flag_VERBOSE=1 ;;
  *)
    if [ -n "$1" ]; then
      pout --option "$*"
    fi
    ;;
  esac
}

post_info() {
  case "$1" in
  --help) #/> Script help and usage information
    printf "Usage:\n%s%s [OPTIONS]\n" "$padding" "$scr_NAME"
    printf "\nDescription:\n"
    printf "%s%s\n" "$padding" "$scr_DESCRIPTION"
    printf "\nOptions:\n"
    printf "%s-h, --help     Usage guide\n" "$padding"
    printf "%s-v, --version  Script version\n" "$padding"
    printf "%s-d, --verbose  Environment details\n" "$padding"
    ;;
  --version) #/> Script version
    printf "%s\n" "$scr_VERSION"
    ;;
  --error) #/> Error messages
    shift
    printf "Error: \n%s%s\n\n" "$padding" "$*"
    ;;
  *) #/> Environment information if verbose mode is enabled
    if [ "$flag_VERBOSE" -gt 0 ]; then
      printf "A %s environment via %s\n" "$environment" "$protocol"
    fi
    ;;
  esac
}

pout() {
  #@ Print errors and Usage info
  case $1 in
  --option)
    shift
    post_info --error "Invalid option: $*"
    post_info --help
    ;;
  esac

  #@ Trigger early exit
  pull_out 1
}

pull_out() {
  exit "${1:-0}"
}

process() {
  if [ "$XDG_SESSION_TYPE" = "tty" ]; then
    #/> Non-graphical TTY environment
    environment="non-graphical TTY"
    protocol="$(tty)"
    post_info && pout

  elif [ -n "${WAYLAND_DISPLAY:-$DISPLAY}" ]; then
    #/> Graphical Unix environment
    environment="graphical Unix"
    if [ -n "$WAYLAND_DISPLAY" ]; then
      protocol="Wayland"
    else
      protocol="X11"
    fi
    post_info

  elif uname | grep -q 'MINGW64'; then
    #/> Graphical Windows environment
    environment="graphical Windows"
    protocol="$(uname)"
    post_info

  else
    #/> Graphical environment (fallback)
    environment="graphical"
    protocol="$TERM"
    post_info
  fi

}

main() {
  #@ Parse command-line arguments
  parse_cli "$@"

  #@ Check for the presence of a graphical environment
  process

  #@ Exit gracefully with an error code, if necessary
  pull_out
} && main "$@"
