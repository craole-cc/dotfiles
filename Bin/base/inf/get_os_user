#!/bin/sh

establish_environment() {
  #@ Establish script information
  scr_name="get_distro_name"
  scr_version="1.0"
  scr_usage="$(
    printf "Usage: %s [OPTIONS]\n" "$scr_name"
    printf "Options:\n"
    printf "  -h, --help      Display this help message\n"
    printf "  -v, --version   Display script version\n"
    printf "  -d, --verbose   Enable detailed messaging\n"
  )"

  #@ Set default values
  label="Current User"
  verbosity=0
  exit_code=0
  dud="Unknown"
  unset info_source output

  #@ Establish utility functions
  initialize_utilities
}

initialize_utilities() {
  weHave() {
    #@ Check if the info_source is available
    info_source="$1"

    if command -v "$info_source" >/dev/null 2>&1; then
      return 0
    elif [ -f "$info_source" ]; then
      return 0
    # elif [ -n "${info_source+x}" ]; then
    #   info_source="${!info_source}"
    #   return 0
    else
      unset info_source
      return 1
    fi
  }

  get_via_var() {
    info_source="${USER:+\$USER}${USERNAME:+\$USERNAME}"
    info="${USER:-$USERNAME}"
    [ -n "$info" ] || return 1
  }

  get_via_whoami() {
    #@ Check if whoami is installed
    weHave whoami || return 1

    #@ Return the distro name
    info="$(whoami)"
  }

  get_via_id() {
    #@ Check if id is installed
    weHave id || return 1

    #@ Extract the version number
    info="$(id --user --name)"
  }

  get_via_python() {
    #@ Check if python is installed
    weHave python || return 1

    #@ Get the OS release/version (e.g., "10.0.19043" for Windows)
    info="$(
      python -c "import os; print(os.getlogin())"
    )"
  }
}

present_info() {
  while [ "$#" -gt 0 ]; do
    case "$1" in
    -h | --help)
      if [ "$2" ]; then
        output="$(printf "%s\n%s\n" "$2" "$scr_usage")"
        shift
      else
        output="$scr_usage"
      fi
      ;;
    -v | --version)
      output="$scr_version"
      ;;
    *) output="$1" ;;
    esac

    #@ Print the output
    if [ "$verbosity" -gt 0 ]; then
      if [ "$info_source" ]; then
        printf "%s via %s: %s" "$label" "$info_source" "$output"
      else
        printf "%s: %s" "$label" "$output"
      fi
    else
      printf "%s" "$output"
    fi

    #@ Continue to the next argument
    shift
  done
}

process_info() {
  false ||
    get_via_var ||
    get_via_id ||
    get_via_whoami ||
    get_via_python ||
    exit_code=1

  # [ -n "${USER+x}" ] && info="$USER"
  # [ -n "${USERNAME+x}" ] && info="$USERNAME"

  present_info "${info:-$dud}"
}

main() {
  #@ Initialize the script environment
  establish_environment

  #@ Parse the arguments
  while [ "$#" -gt 0 ]; do
    case $1 in
    -d | --verbose)
      verbosity=1
      ;;
    -h | --help | -v | --version)
      present_info "$1"
      return 0
      ;;
    *)
      present_info --help "Unknown option: $1"
      return 1
      ;;
    esac
    shift
  done

  #@ Retrieve the requested information
  process_info

  #@ Terminate the script with the appropriate exit code
  return "$exit_code"
} && main "$@"
