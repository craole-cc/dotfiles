#!/bin/bash

#@ ___________________________________________________ UTIL<|

__find__() {
  if [ -f "$1" ] || [ -d "$1" ]; then
    TARGET="$1"
  else
    TARGET="$(eval find ./"$(printf "%s{$(echo %{1..10}q,)}" | sed 's/ /\.\.\//g')"/ -maxdepth 1 -name "$1")"
  fi
}

__path__() {
  __find__ "$@"
  CURRENT_PATH="$(PWD)"
  TARGET_NAME=$(basename "$TARGET")
  TARGET_PATH="$(readlink -f "$TARGET")"

  [ -f "$TARGET_PATH" ] && isFILE=true
  [ -d "$TARGET_PATH" ] && isDIR=true

  if [ "$TARGET_PATH" = "$CURRENT_PATH" ]; then
    ROOT_PATH="$TARGET_PATH"
  elif [ -f "$TARGET_PATH" ] || [ -d "$TARGET_PATH" ]; then
    ROOT_PATH="$(dirname "$TARGET_PATH")"
  else
    unset ROOT_PATH
  fi
}

__error__() {
  msg=":x: \"$*\" not found"
  eko "$msg"
}

#@ ___________________________________________________ OPTS<|

__info__() {
  if [ "$isFILE" ] || [ "$isDIR" ]; then
    msg="\"$TARGET_NAME\" -> $ROOT_PATH"
    [ "$isFILE" ] &&
      eko ":notebook: $msg"
    [ "$isDIR" ] &&
      eko ":file_folder: $msg"
  else
    eko ":x: Invalid Target"
  fi
}

__read__() {
  if [ "$isFILE" ]; then
    wat "$TARGET"
  elif [ "$isDIR" ]; then
    eko "$TARGET_PATH"
    la "$TARGET"
  else
    eko ":x: Invalid Target"
  fi
}

__list__() {
  if [ -d "$ROOT_PATH" ]; then
    la "$ROOT_PATH"
  else
    __error__ "$@"
  fi
}

__cd__() {
#  doesn't work
  if [ -d "$ROOT_PATH" ]; then
    cd "$ROOT_PATH" || return
  else
    __error__ "$@"
  fi
}

#@ ___________________________________________________ MAIN<|

if [ "$#" -eq 0 ] || [ "$#" -gt 2 ]; then
  echo "$#"
elif [ "$#" -eq 1 ]; then
  __path__ "$1"
  __info__ "$1"
else
  __path__ "$2"
  case $1 in
  -i | --info) __info__ "$2" ;;
  -r | --read) __read__ "$2" ;;
  -l | --list) __list__ "$2" ;;
  -c | --cd) __cd__ "$2" ;;
  *) ;;
  esac
fi

# unset \
#   ROOT_PATH \
#   TARGET_PATH \
#   TARGET \
#   CURRENT \
#   CURRENT_PATH
cdR
