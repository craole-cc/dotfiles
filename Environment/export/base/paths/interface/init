#!/bin/sh
# shellcheck disable=SC1091,SC2153

init_desktop() {
	__help__() {
		printf "\t::USAGE::\n %s\n %s\n" \
			"init_desktop <desktop>" \
			"eg. init_desktop sway"
	}

	__opts__() {
		[ "$#" -eq 0 ] && __help__ && return 1

		case "$@" in
		*'--dry'* | *'--test'*) test=true ;;
		esac

		bar=
		desktop=
		while [ "$#" -gt 0 ]; do
			case "$1" in
			--bar)
				[ "$2" ] && bar="$2"
				shift
				;;
			*)
				desktop="$1"
				;;
			esac
			shift
		done
	}

	__env__() {
		#> Reset
		unset \
			DESKTOP_HOME \
			DESKTOP_NAME \
			DESKTOP_CONF \
			DESKTOP_BACKEND \
			DESKTOP_RUNTIMEDIR \
			DESKTOP_LOG \
			DESKTOP_FOOTSERVER \
			BAR_HOME \
			BAR_NAME \
			BAR_CONF

		#> Desktop
		if [ "$desktop" ]; then
			[ -f "${DOTS_ENV_DESKTOPS}/${desktop}" ] &&
				. "${DOTS_ENV_DESKTOPS}/${desktop}"

			[ "$DESKTOP_BACKEND" ] &&
				[ -f "${DOTS_ENV_DESKTOPS}/${DESKTOP_BACKEND}" ] &&
				. "${DOTS_ENV_DESKTOPS}/${DESKTOP_BACKEND}"

			[ -d "$DESKTOP_HOME" ] ||
				{
					printf "Missing ENV: %s\n" "$desktop"
					return 1
				}

			DESKTOP_NAME="$(basename "$DESKTOP_HOME")"
			DESKTOP_CONF="${DESKTOP_HOME}/${DESKTOP_CONF}"
			DESKTOP_LOG="${DOTS_LOG}/${DESKTOP_NAME}-${TIMESTAMP}.log"
			XDG_CURRENT_DESKTOP="${DESKTOP_NAME}"
			XDG_SESSION_TYPE="${DESKTOP_BACKEND}"

			[ "$DESKTOP_BACKEND" = "wayland" ] && {
				DESKTOP_RUNTIMEDIR="${XDG_RUNTIME_DIR}/${DESKTOP_NAME}"
				DESKTOP_FOOTSERVER="${DESKTOP_RUNTIMEDIR}/foot-serve"
			}

			alias rcWM='rcEdit "$DESKTOP_CONF"'
		fi

		#> Bar
		if [ "$bar" ]; then
			[ -f "${DOTS_ENV_DESKTOPS}/${bar}" ] &&
				. "${DOTS_ENV_DESKTOPS}/${bar}"

			[ -d "$BAR_HOME" ] ||
				{
					printf "Missing ENV: %s\n" "$bar"
					return 1
				}

			BAR_NAME="$(basename "$BAR_HOME")"
			BAR_CONF="${BAR_HOME}/${BAR_CONF}"
		fi

	}

	__link__() {
		#? Validate arguments
		source="$1"
		link="${XDG_CONFIG_HOME}/$(basename "$source")"
		{ [ "$link" ]; } || return 1

		#? Check if link already set
		[ -L "$link" ] && return 0

		#? Validate source
		[ -d "$source" ] || return 1

		#? Backup existing link
		[ -e "$link" ] && mv --force "$link" "${link}.bac"

		#? Establish Link
		ln --symbolic "$source" "$link"
	}

	__deploy__() {
		#| Deploy links in
		case "$sys_INFO" in
		*Linux*)
			__link__ "$DESKTOP_HOME" "$DESKTOP_LINK"
			__link__ "$BAR_HOME" "$BAR_LINK"
			;;
		*) ;;
		esac

		#| Runtime DIR
		if [ "$DESKTOP_BACKEND" = "wayland" ]; then
			[ -d "$DESKTOP_RUNTIMEDIR" ] ||
				{
					sudo mkdir --parents "$DESKTOP_RUNTIMEDIR"
					sudo chmod 700 "$DESKTOP_RUNTIMEDIR"
					sudo chown "$USER:$USER" "$DESKTOP_RUNTIMEDIR"
				}
		fi

		#| Log
		# __test__
	}

	__launch__() {
		# __deploy__
		if [ -z "${WAYLAND_DISPLAY}" ] && [ -z "${DISPLAY}" ] && [ "$(tty)" = "/dev/tty1" ]; then
			# dbus-run-session "$DESKTOP_NAME" -log-level debug >"$DESKTOP_LOG" 2>&1
			# "$DESKTOP_NAME"
			# [ "$RC_xinit" ] && bat "$RC_xinit"
			[ "$RC_xinit" ] && startx "$RC_xinit"
		fi
	}

	__test__() {
		echo "test: $test"
		echo "bar=$bar"
		echo "desktop=$desktop"
		printf "\nTesting Desktop: %s on %s\n" "$XDG_CURRENT_DESKTOP" "$XDG_SESSION_TYPE"

		if [ "$DESKTOP_HOME" ]; then
			printf "	Total files in config HOME: %s\n" \
				"$(fd . "$DESKTOP_HOME" | wc -l)"
		else
			printf "	Missing HOME: %s\n" "$DESKTOP_HOME"
		fi

		if [ -L "${XDG_CONFIG_HOME}/${DESKTOP_NAME}" ]; then
			printf "	Total files in config LINK: %s\n" \
				"$(fd . "${XDG_CONFIG_HOME}/${DESKTOP_NAME}" | wc -l)"
		else
			printf "	Missing LINK: %s\n" "${XDG_CONFIG_HOME}/${DESKTOP_NAME}"
		fi

		if [ "$DESKTOP_CONF" ]; then
			printf "	Total lines in config FILE: %s\n" \
				"$(cat <"$DESKTOP_CONF" | wc -l)"
		else
			printf "	Missing CONF: %s\n" "$DESKTOP_CONF"
		fi

		printf "\nTesting Bar: %s\n" "$BAR_NAME"

		if [ "$BAR_HOME" ]; then
			printf "	Total files in config BAR_HOME: %s\n" \
				"$(fd . "$BAR_HOME" | wc -l)"
		else
			printf "	Missing BARHOME: %s\n" "$BAR_HOME"
		fi

		if [ -L "${XDG_CONFIG_HOME}/${BAR_NAME}" ]; then
			printf "	Total files in config LINK: %s\n" \
				"$(fd . "${XDG_CONFIG_HOME}/${BAR_NAME}" | wc -l)"
		else
			printf "	Missing LINK: %s\n" "${XDG_CONFIG_HOME}/${BAR_NAME}"
		fi

		printf "\nTesting Other Vars:\n"

		if [ -f "$DESKTOP_FOOTSERVER" ]; then
			printf "	Total files in config FILE: %s\n" \
				"$(cat <"$DESKTOP_FOOTSERVER" | wc -l)"
		else
			printf "	FOOT: %s\n" "$DESKTOP_FOOTSERVER"
		fi

		if [ -f "$DESKTOP_LOG" ]; then
			printf "	Total files in config FILE: %s\n" \
				"$(cat <"$DESKTOP_LOG" | wc -l)"
		else
			printf "	LOG: %s\n" "$DESKTOP_LOG"
		fi

		if [ -d "$DESKTOP_RUNTIMEDIR" ]; then
			printf "	Total files in config RUNTIMEDIR: %s\n" \
				"$(fd . "$DESKTOP_RUNTIMEDIR" | wc -l)"
		else
			printf "	RUN: %s\n" "$DESKTOP_RUNTIMEDIR"
		fi
	}

	#| Main
	#? Parse user input
	__opts__ "$@"

	#? Load Environment Parameters
	__env__

	#? Run Process
	if [ "$test" ]; then
		__test__
	else
		__launch__
	fi
}

# init_desktop --dry-run --bar warbar sway
