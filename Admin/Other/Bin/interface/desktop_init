#!/bin/sh

# ===================================================================
#@		                           	INFO			                       @#
# ===================================================================

__info__() {
  _cmd_PATH="$(PathOf "$0")"
  _cmd_NAME="$(basename "$_cmd_PATH")"
  _cmd_HOME="$(dirname -- "$_cmd_PATH")"
  _cmd_VERSION="1.0"
  _cmd_DESCRIPTION="Allow the use of decimals in arithmetic equations"
  _cmd_DEPENDENCIES="(python or bc), printf, echo, __cmd_exists__"
  _cmd_USAGEGUIDE="$(
    cat <<USAGE_GUIDE

#>----------------------------------------------------<#
                      USAGE: $_cmd_NAME
#>----------------------------------------------------<#
    $_cmd_DESCRIPTION
#>----------------------------------------------------<#
            command <[options]> <[arguments]>
      $_cmd_NAME --desktop "desktop to initialize"
#>----------------------------------------------------<#
      -h --help       |>     Usage guide
      -v --version    |>     Version
      -d --verbose    |>     Details
      -t --dry-run    |>     Use python
      -w --desktop    |>     Desktop to load
      -p --protocol    |>     Wayland or X11
#>----------------------------------------------------<#

USAGE_GUIDE
  )"
}

# ===================================================================
#@		                        GLOBAL TOOLS                         @#
# ===================================================================

#@ Usage display
__help__() {
  printf "%s\n" "$_cmd_USAGEGUIDE"
  exit 0
}

#@ Version display
__version__() {
  printf "%s\n" "$_cmd_VERSION"
  exit 0
}

#@ Command validation
__cmd_exists__() {
  unalias "$@" >/dev/null 2>&1
  command -v "$@" >/dev/null 2>&1
}

# ===================================================================
#@		                          OPTIONS			                       @#
# ===================================================================

__opts__() {

  #@ Declare user options (Allow multiple flags)
  parser_definition() {
    setup REST
    disp _cmd_USAGEGUIDE -h --help
    disp _cmd_VERSION -v --version
    flag VERBOSE -d --verbose -- "takes no arguments"
    flag TEST -t --test --dry-run -- "takes no arguments"
    param DESKTOP -w --desktop -- "takes one argument"
    param PROTOCOL -p --protocol -- "takes one argument"
  }

  #@ Load options
  eval "$(getoptions parser_definition) exit 1"
}

# ===================================================================
#@		                          DEFAULT			                       @#
# ===================================================================

__defaults__() {
  [ "$DESKTOP" ] || DESKTOP="$1"

  case "$DESKTOP" in
  sway | wayfire | river) [ "$PROTOCOL" ] || PROTOCOL=wayland ;;
  qtile) [ "$PROTOCOL" ] || PROTOCOL=X11 ;;
  *) printf "Unknown desktop: %s" "${DESKTOP}" ;;
  esac
}

# ===================================================================
#@		                          PROCESS			                       @#
# ===================================================================

__process__() {

  #| Calculate based on app selection
  case "$DESKTOP" in
  fend) _fend_ "$*" ;;
  qalc) _qalc_ "$*" ;;
  python_math) _pc_ "$*" ;;
  bc) _bc_ "$*" ;;
  *) printf "%s\n" $(("$*")) ;;
  esac

}

# ===================================================================
#@		                           	ERROR			                       @#
# ===================================================================

__error__() {
  case $* in
  -s | --string)
    msg="ðŸŸ¥ Please ensure that a valid equation is entered."
    printf "\n%s\n" "$msg"
    __help__
    exit 1
    ;;
  *) ;;
  esac
}

# ===================================================================
#@		                          CLEANUP			                       @#
# ===================================================================

__cleanup__() {
  unset VERBOSE BC PYTHON DESKTOP
}

# ===================================================================
#@		                           	 MAIN			                       @#
# ===================================================================

__main__() {

  #@ Confirm that a string was entered
  [ "$#" -eq 0 ] && __error__ --string

  #@ Process all stings
  while [ $# -gt 0 ]; do
    __process__ "$1"
    shift
  done

}

# ===================================================================
#@		                            RUN	  		                       @#
# ===================================================================

#@ Load internal variables
__info__

#@ Read input arguments
__opts__ "$@"

#@ Establish defaults
__defaults__ "$@"

echo "DESKTOP: $DESKTOP"
echo "PROTOCOL: $PROTOCOL"
echo "TEST: $TEST"
echo "ALL: $*"

#@ Allow verbose option if requested
# if [ "$VERBOSE" ]; then
#   __verbose__ "$@"
# else
#   __main__ "$@"
# fi

#@ Remove any leftover variables
# __cleanup__
