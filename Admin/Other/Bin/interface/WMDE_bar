#!/bin/sh
# shellcheck disable=SC1091

#| Declare Bar to use
__opts__() {
    if [ "$1" ]; then
        bar_to_use="$1"
    else
        # bar_to_use="waybar"
        echo "Usage: missing arg"
        return 1
    fi
}

__env__() {
    case "${bar_to_use}" in
    waybar) bar_rc="/storage/DOTS/Config/tools/widgets/waybar/config" ;;
    *) ;;
    esac
    # . "${DOTS_ENV_CTX}/${bar_to_use}" &&
    #     [ -f "$BAR_CONF" ] && bar_rc="$BAR_CONF"
    bar_rc="/storage/DOTS/Config/tools/widgets/waybar/config"
    true
}

__kill__() { pkill "${bar_to_use}"; }

__launch__() {
    [ "${bar_rc}" ] && bar_conf_arg="-c ${bar_rc}"
    bar_cmd="${bar_to_use} ${bar_conf_arg} -l info"
    eval "${bar_cmd}"
}

__main__() {
    #| Accept user input
    __opts__ "$@"

    #| Load ENV
    __env__

    #| Kill all instances of the bar
    __kill__

    #| Launch
    __launch__
}

__main__ "$@"
# eval "${bar_to_use} -c /storage/DOTS/Config/tools/widgets/waybar/config -l error"

# ls "${BAR_HOME}/${BAR_CONF}"
# waybar_home="$DOTS_TOOL/widgets/waybar"
# waybar --config "$waybar_home/config" --log-level error
# --style "$waybar_home/config"
