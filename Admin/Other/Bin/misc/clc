#!/bin/sh

# expression='"' + $* + '"'
# echo "$expression"
# echo "$*"

echo clc
# b='"{}"'.format(a)

# python -c "print(f'"{$*}"')"

__calculate__() {
  python -c "print($expression)"
}

__usage__() {
  cat
  Wrap the expression in quotes"
  "Usage: clc "expression""
  "Example: calc "1 + 2 * 3.0 / 4.5
  "
}

# if preg_match('/^(["\']).*\1$/m', $string) = 1; then
  # __usage__
# else
#   __calculate__
# fi

# printf %.10f\\n "$((10**9 * 20/7))e-9"   # many shells. Not mksh.
# echo "$(($*))"                       # (ksh93/zsh/yash, some bash)
# awk "BEGIN {print $*}"
# "$*" | bc -l
# calc
# bc <<< $*
# bc <<< "scale=4; (20+5)/2"
# dc <<< "4 k 20 5 + 2 / p"
# expr $*
# calc $*
# node -pe $*  # Uses the power of JavaScript, e.g. : node -pe 20+5/Math.
# perl -E "say $*"
# python -c "print($*)"
# clisp -x "(+ 2 2)"
# lua -e "print($*)"
# php -r 'echo $*;'
# ruby -e 'p $*'
# slsh -e 'printf("%f",$*)'
# tclsh <<< 'puts [expr $*]'
# sqlite3 <<< 'select $*;'
# echo 'select 1 + 1;' | sqlite3
# psql -tAc 'select 1+1'
# R -q -e 'print(sd(rnorm(1000)))'
# r -e 'cat(pi^2, "\n")'
# r -e 'print(sum(1:100))'
# smjs
# jspl
# gs -q  <<< "5 2 div 20 add  ="
