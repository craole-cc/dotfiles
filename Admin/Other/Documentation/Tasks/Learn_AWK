#!/bin/sh

: <<'AWK'
'/manager/ {print}'     => filter based on pattern
'NF { $1=$1; print }'   => remove all whitespace

AWK

: <<'GeeksforGeeks'
printf "\n==>> Whitespace <<===\n"
printf '%s\n' "$_testStr_geekstut" |
    awk 'NF { $1=$1; print }'

printf "\n==>> Filter by Pattern <<===\n"
printf '%s\n' "$_testStr_geekstut" |
    awk '/sales/ {print}'

printf "\n==>> Split Fields <<===\n"
printf '%s\n' "$_testStr_geekstut" |
    awk 'NF { $1; print $1,$4}'

printf "\n==>> Last Field <<===\n"
printf '%s\n' "$_testStr_geekstut" |
    awk 'NF {$1;print $NF}'

printf '%s\n' "$_testStr_geekstut" | awk '
    BEGIN {
        print ""
        print "=======>> Printer <<========"
        print "============================"
        {print "String 1"; print "String 2"}
    }

    NF {
        print \
        $1, # Employee
        "works in",
        $3, # Department
        "and makes",
        "$"$NF, # Last Field,
        "per month."
    }


    END {
        print "=========>> END <<=========="
    }
'

printf '%s\n' "$_testStr_geekstut" | awk '
    BEGIN {
        print ""
        print "=======>> Logical <<========"
    }

    # $NF > 25000 {print $2,$1" $"$NF}
    # $2 == "manager", $2 == "peon" # Sequential Filter
    # NR==3, NR==6 { print NR, $0 } # Sequential by line number
    # /500/ ; /es/ # OR Filter
    # NF == 0 { print NR, $0 } # Empty lines
    { if (length($0) > max) max = length($0) } # Longest line

    END {
        print "============================"
        print max, "is the length of the longest line"
        print
        print "=========>> END <<=========="
    }
'
GeeksforGeeks

: <<'TimDennis'
printf '%s\n' "$_testStr_TimDennis" | awk '
    {print NF}
    '  | uniq # Count fields with uniq

printf '%s\n' "$_testStr_TimDennis" | awk '
    BEGIN {
        print ""
        print "=======>> Logical <<========"
        print "============================"
        # FS = "[[space]]"
    }

    NF {
        print
    }

    END {
        print "=========>> END <<=========="
    }
'
TimDennis

: <<'LinuxCommandORG'

printf '%s\n' "$_testStr_IGNORE" | awk '
    BEGIN {
        print ""
        print "=======>> Logical <<========"
        print "============================"
        # FS = "\n"
        # RS = ""
        OFS = "|"
    }

{split($0,a," "); print a[3],a[2],a[1]}
# $1 ~ /^$/ { print NR $0 }
# $1 ~ /^-/ {t["Regular Files"]++}
# $1 ~ /^d/ {t["Directories"]++}
# $1 ~ /^l/ {t["Symbolic Links"]++}
# END {for (i in t) print i ":\t" t[i]}

    END {
        print "=========>> END <<=========="
    }
'

awk '
    BEGIN {
        "date" | getline
        print $4
    }
'

# split(_testStr_IGNORE,fields," ")


# ls -l "$DOTbin"
# find "$DOTbin" | awk -F'[W|a]' '
# BEGIN { OFS = ","}
# {print $0}'

ls -l "$DOTbin" | awk 'NF >=9 {c++; t += $5} END {print t / c}'

# shellcheck disable=SC2012
ls -l "$DOTbin" | awk '
    BEGIN {
        page_length = 5
    }

    {
        if (NR % page_length)
            print
        else
            print "\f" $0
    }

'

# shellcheck disable=SC2012
ls -l "$DOTbin" | awk '
# For
    # {s = ""; for (i = NF; i > 0; i--) s = s $i OFS; print s}
    # BEGIN {for (i=0; i<10; i++) a[i]="foo"; for (i in a) print i}
# While
# {
#     OFS="|"
#     s = ""
#     i = NF
#     while (i > 0) {
#         s = s $i OFS
#         i--
#     }
#     print s
# }
$1 ~ /^-/ { print $0 }
$1 ~ /^d/ { print $0 }
$1 ~ /^l/ { print $0 }
# $1 ~ /^-/ {t["Regular Files"]++}
# $1 ~ /^d/ {t["Directories"]++}
# $1 ~ /^l/ {t["Symbolic Links"]++}
# END {for (i in t) print i ":\t" t[i]}
'

LinuxCommandORG
: <<'COMMENTBLOCK'
printf '%s\n' "$_testStr_tomcat" |
    awk -F'[/|=]' -vOFS='\t' '{print $3, $5, $NF}'
# awk -F'[/=]' '{print $3 "\t" $5 "\t" $8}'
COMMENTBLOCK
