[user]
email = iamcraole@gmail.com
name = Craole

[core]
#@ BIN::Editor
editor = Editor

#@ Global gitignore (applied to all repositories)
excludesfile = "$GDOTDIR/gitignore"

#@ Ensure that Git doesn't change line endings automatically
autocrlf = input

#@ Disable detection of changes in the executable bit of files
filemode = false

#@ Automatically fix whitespace issues
whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol

[commit]
; Show full diff when editing commit message
verbose = true

[push]
default = simple

[merge]
; Tool used by `git mergetool`
tool = nvim-diff4

[pull]
ff = only

[diff]
; Tool used by `git difftool`
tool = nvim-diff2

[mergetool "nvim-diff4"]
cmd = nvim -d $LOCAL $BASE $REMOTE $MERGED -c '$wincmd w' -c '$wincmd J'
; Abort operation if editor exited with non-zero status
trustExitCode = true

[mergetool "nvim-fugitive-diff3"]
	cmd = nvim -f -c \"Gdiff\" \"$MERGED\"
; Abort operation if editor exited with non-zero status
trustExitCode = true

[difftool "nvim-diff-2"]
cmd = nvim -d $LOCAL $REMOTE
; Abort operation if editor exited with non-zero status
trustExitCode = true

[alias]
#@ list all aliases
# ali = "!git config -l | grep alias | cut -c 7-"
cfg-alias = "!f() { git config --list | grep alias | cut -c 7-; }; f"
cfg-global = config --global --list
# basic {{{
st = status --short
cl = clone
ci = commit
co = checkout
br = branch
r = reset
cp = cherry-pick
gr = grep -Ii
# }}}
# tweak defaults {{{
diff = diff --word-diff
branch = branch -ra
grep = grep -Ii
bra = branch -ra
ai = add --interactive
# }}}
# commit {{{
cm = commit -m
cma = commit -a -m
ca = commit --amend
amend = commit --amend
caa = commit -a --amend -C HEAD
; Aliases for `git` commands
status-short = status --short
statuss = status-short
addp = add --patch
addi = add --interactive
# }}}
# log commands {{{
pretty-log=log --pretty=format:\"%C(auto)%h %d %s %C(green)(%an) %C(italic cyan)[%ad]\" --date=relative --graph
logs = pretty-log --name-status
logstat = pretty-log --decorate --stat
log-diff-upstream = pretty-log --left-right HEAD...@{u}
log-diff-master = pretty-log --left-right HEAD...origin/master
last = log -1
# }}}
# stash {{{
sl = stash list
sa = stash apply
ss = stash save
diff-staged = diff --staged
diffs = diff-staged
branch-master = "!f() { git fetch; git checkout --no-track -b $1 origin/master; }; f"
branch-develop = "!f() { git fetch; git checkout --no-track -b $1 origin/develop; }; f"
branch-rename = "!f() { git push origin -d $(git branch --show-current); git branch -m $(git branch --show-current) $1; git push-new; }; f"
push-new = push --set-upstream origin HEAD
delete-merged-branches = !git branch --merged | egrep -v \"(^\\*|master|dev)\" | xargs git branch -d
config-list-all = config --list
config-list-all-origin = config --list --show-origin
# initial empty commit
empty = "!git commit -am\"[empty] Initial commit\" --allow-empty"
up= "!f() { msg=${*-Updating}; git pull --quiet; git status --short; git add --all . ; git commit --all --quiet --message="$msg"; git push --progress;}; f"

[rerere]
; Track and remember conflict resolutions
	enabled = true

[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
; Overwrite/extend this config for work related repositories
# [includeIf "gitdir:~/programming/credijusto/"]
#     path = ~/.gitconfig.credijusto
